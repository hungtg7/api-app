x-kong-config: &kong-env
  KONG_DATABASE: "postgres"
  KONG_PG_HOST: kong-db
  KONG_PG_PASSWORD: kong
  KONG_PROXY_ACCESS_LOG: /dev/stdout
  KONG_ADMIN_ACCESS_LOG: /dev/stdout
  KONG_PROXY_ERROR_LOG: /dev/stderr
  KONG_ADMIN_ERROR_LOG: /dev/stderr
  KONG_ADMIN_LISTEN: 0.0.0.0:8001
  KONG_ADMIN_GUI_URL: http://localhost:8002
  KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yaml

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  kong-db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  # Nginx config
  # nginx:
  #   image: nginx:latest 
  #   restart: always
  #   depends_on:
  #    - order
  #   volumes:
  #     - ./app/api_gateway/nginx/conf.d:/etc/nginx/conf.d
  #   ports:
  #     - "8080:8080"
  #     - "50002:50002"
  kong:
    image: kong/kong-gateway:latest 
    restart: always
    platform: linux/amd64
    depends_on:
    - kong-db
    - webapp
    environment:
      <<: *kong-env
    volumes:
      # - ./app/api_gateway/kong/kong.conf:/etc/kong/kong.conf
      - ./app/api_gateway/kong:/opt/kong
    command: "kong start"
    ports:
      - "8002:8002"
      - "8001:8001"
      - "8000:8000"

  kong-config:
    build:
      context: .
      dockerfile: app/api_gateway/kong/Dockerfile 
    restart: always
    depends_on:
      kong:
        condition: service_healthy

  kong-migrations:
    image: kong/kong-gateway:latest 
    command: kong migrations bootstrap
    platform: linux/amd64
    depends_on:
      - kong-db
    environment:
      <<: *kong-env
    restart: on-failure

  kong-migrations-up:
    image: kong/kong-gateway:latest
    command: kong migrations up && kong migrations finish
    platform: linux/amd64
    depends_on:
      - kong-db
    environment:
      <<: *kong-env
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: app/order/Dockerfile 
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8888:8888"
  pet:
    build:
      context: .
      dockerfile: app/pet/Dockerfile 
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
  webapp:
    build:
      context: ../frontend-app
      dockerfile: ./Dockerfile 
    restart: always
    depends_on:
      - pet
    ports:
      - "3000:3000"
  grpc-gateway:
    build:
      context: .
      dockerfile: app/grpc_gateway/Dockerfile 
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9090:9090"
  user:
    build:
      context: .
      dockerfile: app/user/Dockerfile 
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - app/user/.env
    ports:
      - "9999:9999"
