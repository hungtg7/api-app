syntax="proto3";
package app_data_monitoring.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/hungtran150/api-app/proto/v1/app_data_monitoring_bp;app_data_monitoring_bp";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      version: "1.0";
    }
    external_docs: {
      url: "https://github.com/hungtran150/api-app";
      description: "gRPC-gateway";
    }
    security_definitions: {
        security: {
          key: "bearer"
          value: {
            type: TYPE_API_KEY
            in: IN_HEADER
            name: "Authorization"
            description: "Authentication token, prefixed by Bearer: Bearer <token>"
          }
        }
      }
      security: {
        security_requirement: {
          key: "bearer"
        }
      }
    schemes: HTTPS;
  };

service SlackAlertService {
    rpc CreateButtonAlertNotification(SlackButtonRequest) returns (SlackButtontResponse) {
        option (google.api.http) = {
            post: "/api/v1/alert"
            body: "*"
          };
    }
}

message SlackButtonRequest {

  message Actions {
      string name = 1;
      string type = 2;
      string value = 3;
  }

  message Team {
      string id = 1;
      string domain = 2;
  }

  message Channel {
      string id = 1;
      string name = 2;
  }

  message User {
      string id = 1;
      string name = 2;
  }

  message Icons {
      string image_36 = 1;
      string image_48 = 2;
      string image_72 = 3;
  }

  message Bot_profile {
      string id = 1;
      bool deleted = 2;
      string name = 3;
      uint32 updated = 4;
      string app_id = 5;
      Icons icons = 6;
      string team_id = 7;
  }

  message Actions1 {
      string id = 1;
      string name = 2;
      string text = 3;
      string type = 4;
      string value = 5;
      string style = 6;
  }

  message Attachments {
      string callback_id = 1;
      string fallback = 2;
      string text = 3;
      uint32 id = 4;
      string color = 5;
      repeated Actions1 actions = 6;
  }

  message Original_message {
      string bot_id = 1;
      string type = 2;
      string text = 3;
      string user = 4;
      string ts = 5;
      string team = 6;
      Bot_profile bot_profile = 7;
      repeated Attachments attachments = 8;
  }

  message Payload {
      string type = 1;
      repeated Actions actions = 2;
      string callback_id = 3;
      Team team = 4;
      Channel channel = 5;
      User user = 6;
      string action_ts = 7;
      string message_ts = 8;
      string attachment_id = 9;
      string token = 10;
      bool is_app_unfurl = 11;
      google.protobuf.Any enterprise = 12;
      bool is_enterprise_install = 13;
      Original_message original_message = 14;
      string response_url = 15;
      string trigger_id = 16;
  }

  Payload payload = 1;
}

message SlackButtontResponse {
    int32 code = 1;
    string message = 2;
}