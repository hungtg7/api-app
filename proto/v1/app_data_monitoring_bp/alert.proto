syntax="proto3";
package app_data_monitoring.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/hungtran150/api-app/proto/v1/app_data_monitoring_bp;app_data_monitoring_bp";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      version: "1.0";
    }
    external_docs: {
      url: "https://github.com/hungtran150/api-app";
      description: "gRPC-gateway";
    }
    security_definitions: {
        security: {
          key: "bearer"
          value: {
            type: TYPE_API_KEY
            in: IN_HEADER
            name: "Authorization"
            description: "Authentication token, prefixed by Bearer: Bearer <token>"
          }
        }
      }
      security: {
        security_requirement: {
          key: "bearer"
        }
      }
  };

service SlackAlertService {
    rpc CreateButtonAlertNotification(SlackButtonRequest) returns (SlackButtontResponse) {
        option (google.api.http) = {
            post: "/api/v1/alert-service"
            body: "*"
          };
    }
}

message SlackButtonRequest {

  message User {
      string id = 1;
      string username = 2;
      string name = 3;
      string team_id = 4;
  }

  message Container {
      string type = 1;
      string text = 2;
  }

  message Team {
      string id = 1;
      string domain = 2;
  }

  message Values {
  }

  message State {
      Values values = 1;
  }

  message Text {
      string type = 1;
      string text = 2;
      bool emoji = 3;
  }

  message Actions {
      string type = 1;
      string block_id = 2;
      string action_id = 3;
      Text text = 4;
      string value = 5;
      string action_ts = 6;
  }

  string type = 1;
  User user = 2;
  string api_app_id = 3;
  string token = 4;
  Container container = 5;
  string trigger_id = 6;
  Team team = 7;
  google.protobuf.Any enterprise = 8;
  bool is_enterprise_install = 9;
  State state = 10;
  string response_url = 11;
  repeated Actions actions = 12;
  string challenge = 13;
}

message SlackButtontResponse {
    int32 code = 1;
    string message = 2;
}